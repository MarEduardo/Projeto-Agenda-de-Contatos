<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAA3NCSVQICAjb4U/gAAAAAXNSR0IArs4c
        6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAB4cAAAeHAV36FEMAAAAZdEVYdFNvZnR3YXJlAHd3dy5p
        bmtzY2FwZS5vcmeb7jwaAAAVVElEQVR4Xu3df6wlZX3H8dnd7FZ3k9IuUVLE7SI2RUSgCbAlWTCaQkjB
        sojWPzRphSBkiS1WIWKJdatgFcJPCWBbESgFxFoDghi1JpBaQJA1WAqCFIRARRqQHxWQH31/750Dzz73
        e848Z5+555nZ+XyS1w37MM+cZ27u/dxzz52ZU7388suLhuyF6/AYbECklF9jM/4KS72vVw/ZHdfgF4j3
        OWujY/goko9hEnewDeQAPI/wAES64GLvazZG/hDP1XO65kpvzdNyB9tA7goWK9I17/C+bkPEftrG87rk
        YG/d03AHc5Edg0WKdNHfel+7I2R1sG1Xfd5b+zTcwVxkXbBIkS66yPvaHSFvCLbtqsu9tU/DHcxF7Hen
        cKEiXfNl72s3RB4Mtu+iK7x1T8MdzEVUANJ1KQXw7mD7LlIBiGylxgIw5F24p57TNb39FcD+tLKryCL6
        IryvvZGkAhgh28N7nMX0BcTrDvX2GcCz3jyRtpC/C77ePFMVQAnkU8F6PSoAEQ9RASRwB3MRFYAURVQA
        CdzBXEQFIEURFUACdzAXUQFIUUQFkMAdzEVUAFIUUQEkcAdzERWAFEVUAAncwVxEBSBFkVYKgCzD+3Eu
        PocDve0mIXZtzKdxPo7Ga73tYqQbBUCW401Yj8OwocGJCBcas/sEePNih2Jf7IQl3tpEPCS7AIhdEXhz
        vX3oEiR9PZJT8RLC+XdjF2/7EClbAMS+Aa/AkwgfuISHYGdG7emtVSRE2iiAS4PtY8d5c0LEvn/ieSM3
        enNCpEwBkNfhqvpBusZui2SfmOXe2kUMySoAsgKT7mh1kzcvROyHZzwvtNabN0JmXwDkCDxaP0CX3Y49
        4vWLGJJbAG8NtvU85c0LkTuC7T2HePNGyGwLgJwS7LwPrKEnfhJlmEhuAdgNbeM5ocYXsknTbfE2ePNG
        yOwKgNgLfC/WO+6TR7A6PCgRogJIMP+hqlaiq9c8p7gsPjAZNqICSDD/oarODnbaV4fHByfDRVQACSxr
        Ef+dcpwX8ADun5GH4a3Dc593gDJMRAWQwHJ8vbNJ7Pdsuz9a0hlMbSJ2J5ZPIOUNGvby9iHDQ1QACSzf
        qnc2zlPY2Zs8S+S99XomOcmbK8NDVAAJLHZaYrzj0CZvYgnkhmBdngu9eTI8RAWQwGI/4eMdhxrfQmlW
        yGeDdXmu8ebJ8BAVQAJL03n+U1/9tFjIacG6PFd782R4iAoggaVpkdnvP9YWckuwLs8F3jwZHqICSGC5
        tt7ZOPbqe/Fz7skx9XomOcGbK8NDVAAJLBvrnU1ivybYdm/0drJYiN2MwS7KOAcp5yrs5u1HhoeoABJY
        7K287RLbeOfj2DOCZ2dkmnXd6R2gDBNRASSY/1BVm4Kd9pE9O3hnfHAyXEQFkGD+w/wtvzbXO+2j8+ID
        k2EjKoAEr/5HVe2JSXdA6aqfYlV4UCJEBZBgy3/MXxeQemFQF9iLk+vDYxAxRAWQYOFAVe2Pe+sH6LJv
        Y028fhFDVAAJ/EGeUsPug97FZwN26vKx0G3CZSyiAkjgDo6QfXAW7Nr88IFnzYroNpwM/dSXRkQFkMAd
        9BC7bdibYe9yYu/8M8lRCBcas3MJvHmxvbEGugW4TIWoABK4g7mIffOGC401fvJEchAVQAJ3MBdRAUhR
        RAWQwB3MRVQAUhRRASRwB3MRFYAURVQACdzBXEQFIEURFUACdzAXUQFIUUQFkMAdzEVUAFIUUQEkcAdz
        ERWAFEVUAAncwVxEBSBFERVAAncwF1EBSFFEBZDAHcxFVABSFFEBJHAHcxEVgBRFVAAJ3MFcRAUgRREV
        QAJ3MBdRAUhRRAWQwB3MRVQAUhRRASRwB3MRFYAURVQACdzBXEQFIEURFUACdzAXUQFIUUQFkMAdzEVU
        AFIUUQEkcAdzERWAFEVUAAncwVxEBSBFERVAAncwF1EBSFFEBZDAHcxFVABSFFEBJHAHcxEVgBRFVAAJ
        3MFcRAUgRREVQAJ3MBdRAUhRRAWQwB3MRVQAUhRRASRwB3MRFYAURVQACdzBXEQFIEURFUACdzAXUQFI
        UUQFkMAdzEVUAFIU6UMBXIKPT/AdePNGrvQedxruYC6iApCiSB8KoA2b8RnY99wSbx2TuIO56sWEi4yp
        AGRRkaEUQOgOvA9LvfV43MFcRAUgRZEhFsDIf+Fgb00xdzAXUQFIUaQLBfDjYPtZewmnY7m3thF3MBdR
        AUhRpAsF8NVg+1J+gB289Rl3MBdRAUhRpAsFcESwfUn22sD27hq9wVxEBSBFkeIFYMgZwZySbsV2C9YX
        D7SBqACkKNKJAjDk7TgNX8PXM1yL2/FzxOtJ8bUFa4sH2kBUAFIU6UwBLAayE47DbYjXNsmRW+wn/EeM
        rMDBuAA34F48jicaPIXwQT3evNhjuBN2RtQp2Ntbp0iMbNMFMEKW4URbD+I1eux7c+dX5oc7C5FD8TDC
        yV1wM97irVlkhAyiAEbIbrilXluTf3xlXriTuYGq2g4X1Rt21a/wMSSf8STDQgZVAIbYs4HL6vVN8hze
        MDcn2sF6PIRw4y77PnYMj0HEkMEVgCH2A/xn9RonOW1u+2DianTxKX+T60fHIDJCBlkAhhwYrHOch+e2
        DSalPHXoqqNHxyFiyGALwJDzg7WOs8do48ODwT56EmviT4IMFxl6AdivAva7frzukL2OVq3C1p5Y0CXf
        8D4RMkxk0AVgyDeD9Xrs5KLk85WvxgexH+xEn1mwM6iOR8pVVS/i9d4nQoaHqACq6i+C9XrsT+rVpcHA
        OMd6DzArxE5IstsnxeuKHeXNl+EhKoCq+pNgvZ7/RvWjYMDzFW/ns0ZW4v56TeOc7c2V4SEqgKraO1iv
        5xlUjwYDnvd4Oy+B2CnJ8fpCnSgrKY+oAKpq12C94zSeQ7zO23kJ5JPBujw6J0DmEBVAYgE8EA3ENno7
        L4E03WHlYm+eDA9RASQWgJ1O6/2PkXuw0nuAWSK7o+nvmqd6c2V4iAogsQBOjQY812HsfcUWG9kXP0G8
        rthB3nwZHqICSCyAddHAOHYd8XdxIezFuFn4Euymhi/AW1Pol1jhfSJkeIgKILEAluB7wUBfbfI+CTJM
        RAWQUgD1hmuRchefrvohJt7/XIaFqABSC6De+ENb/I/+sBcG3xYeuAhRAUxTAPWE67f4n/1wUngMIoao
        ALaiAOzKwPNgbyu0cONueRobMfU7osq2j6gApi2AYOIfIeW2QqXciF28tYsYogLY2gIwxG4ocC6arhWY
        pbvxEehmoDIRUQHkFMAIWQq7B8CROBln4qwGV2Dhg73K/q7vzYvZu5vaPc8/gN/31ifiISqANgpgaxC7
        mcfCB3tV5z950m9EBaACkKEiKgAVgAwVUQGoAGSoiApABSBDRVQAKgAZKqICUAHIUBEVgApAhoqoAFQA
        MlREBaACkKEiKgAVgAwVUQGoAGSoiApABSBDRVQAKgAZKqICSDgGd2IuogKQoogKoKr+OFiv50F3Yi6i
        ApCiiAqgqo4J1uu51Z2Yi6gApCiiAqiqq4L1eq5zJ+YiKgApigy6AMhvoOm9Pv7GnZyLqACkKDL0ArDb
        98Vrju3nTs5FVABSFBlsAZA98Xy9znEexzJ3B7mICkCKIoMsALICm+s1TvIPc9vHO2gDUQFIUWSoBZDy
        dv8vYu4u2+5OchEVgBRFBlUAZHv8c722Jv/yyrxwJ20hKgApigymAMhheKReVxN7bWCPV+aGO2oLUQFI
        UWSbLgCyHPYWfk1vwhP76y32E/6jLUQFIEWRzhQA+V3YWXlnwHsHrFTnwL7hb8ATiNfU5PtYtsXawn+0
        hagApCjSiQIgx+L/6jklPYA1C9YXD7SBqACkKFK8AMj+sFfc47mz9hDcd9NeMNAGogKQokgXCuCfgu1L
        uR9j31jXHcxFVABSFOlCAaSckLOYvorf8tY24g7mIioAKYp0oQDuCrafpf/FMd6aYu5gLqICkKLIEAvA
        vvHtIqDf9NbjcQdzERWAFEWGUgBPwp7q/zmSv/FH3MFcRAUgRZE+FMC/4csTNL2GcB2We4+dyh3MRVQA
        UhTpQwFs8OaNkE8F23qu8OZNwx3MRVQAUhRRASRwB3MRFYAURVQACdzBXEQFIEURFUACdzAXUQFIUUQF
        kMAdzEVUAFIUUQEkcAdDZCn2w5GwkwzOhHepYqjpGuUX4M2LnY4T8QGMPZ9ZJEZUAAncQUO2w7l4FOGD
        lnQ3PoKl3ppFRshiF8BzsGe6k9iFON7ckW4WALE7jfysfpAuuhHu5Y0ihix2AbThB/gwdhqzhtkWAFmF
        8/ASwgfqoqexEUvCYxAxpA8FMGLfb/+B4/GaYA0zL4Drg533xUnhMYgY0qcCCN2Hw+o1zK4AyIeCHfeJ
        /S72tvCgREhuAdi768RzZumbuCQai7VTAGQtmt5IsMt+iKyLImTbQnIL4LeDbbsqvwDIEnwP8c77ZpN3
        gDJMJKsADLk12L6LWimAdfXOmtgzhO/iQlwwI1+CvVJq5w14awr9Eiu8g5ThIW0UwB/AXmyO53ZFKwWQ
        8l5idt3xDt4OZoHsi58gXlfsIG++DA/JLgBDdobd3NNuq/1sprbvEHy5t+ZpWOzNAuIdh+7BSm/yLJHd
        YS/4xesLnerNleEhrRRAm4idVfs72Acfx02I1zWNVp4BWLPFOw5t9CaWQOzWR/H6Qhd782R4SOcKwEMO
        wtaedNdKAdhTk3jHoXXexBLIJ4N1ea735snwkF4UgCF22r293hWvsUkrBdB0rv97vIklEHthMF5f6Cve
        PBke0psCGCGHoOkHcqiVAvhRvbNxOvFNRVai6eKKs725MjykdwVgyAnBGpu0UgCX1jub5Fhv8qyQFWg6
        K8oc5c2X4SF9LQB7ofDf6zU2aaUAjqh31uRqfBB2bwDv0sfF8HbYBRI/hremkP2J5fXeQcrwkF4WgCG/
        h2fqdU7SSgHYFYA/R7zzvvmGd4AyTKS3BWCI3XwnXnMsvwDmPlTV4cFO+8jeHWXBe5/LcJG+F8AuwVrH
        aacA5v6jqi4Ldtw3R4cHJUJ6XQCG/GewXk+rBbAaD9c77hP97V8WINtCATSd+NZeAcz9o6rW46F6531g
        pzHvGB6DiCHbQgGcE6zX024BzA3Mn5V0Uf0AXfUrfAy6Oai4yLZQAEXvCnwouvgrwc14i7dmkRGiAkjg
        Do4QOwHnYNgpuDfgXjyOJxqk3F3Imxd7DHfiOzgFe3vrFIkRFUACdzAXsZN4woXG9M5AsqiICiCBO5iL
        qACkKKICSOAO5iIqACmKqAASuIO5iApAiiIqgATuYC6iApCiiAoggTuYi6gApCiiAkjgDuYiKgApiqgA
        EriDuYgKQIoiKoAE7mAuogKQoogKIIE7mIuoAKQoogJI4A7mIioAKYqoABK4g7mICkCKIiqABO5gLqIC
        kKKICiCBO5iLqACkKKICSOAO5iIqACmKqAASuIO5iApAiiIqgATuYC6iApCiiAoggTuYi6gApCiiAkjg
        DuYiKgApiqgAEriDuYgKQIoiKoAE7mAuogKQoogKIIE7mIuoAKQoogJI4A7mIioAKYqoABK4g7mICkCK
        IiqABO5gLqICkKLItlAAnwnW61EBiHjItlAAfx+s16MCEPGQbaEArg3W61EBiHhIrwuALMMv6rWOowIQ
        8ZC+F8ABwVrHUQGIeEjfC+CqYK3jqABEPKS3BUD+NFjnJCoAEQ/pZQGQHfBYvcYmKgARD+lrAXw9WGMT
        FYCIh/SqAMh2uKReWyoVgIiH9KYAyEF4sF7XNFQAIh7S+QIgO+L8ej1bQwUg4iGtFQB5DfbDhkzvw/E4
        HbfiJcTrmoYKQMRDWikA8mE8Xc/pmsu9NU/DHcxFVABSFMkuAHJMsH0X6RmAiIe0UQCpf48vZXYFQFbi
        zVgH+waf5CiEC409B29ebG+swXJvTSLjkKwCIGuDbUt5xhkLLW4BkH1wFu5H+MCzZi+W3IaTscZbq0iI
        5BbAXsG2s/Y/+DNsCsY8i1MAZBXORe6rlIvhKRyLJd7aRQzpYwH8Gmdiu3oNs78lGNkf99YP0GXfhp4N
        iIv0pQBexA34S7wxWsNsC4DY3yi7+FN/nCexPjwGEUNmUQD2q/Ek9hPdmzdyBnbwHt+Q2RUA2RPP1zvu
        k59iVXhQImSxC6DxL1nkrmB7zwZv3giZTQGQ5dhc77SPzosPTIaNqAASzH9ofrWx6+zXlnfGByfDRVQA
        CSx2QULT7yoh+xv+szMyzbru9A5QhomoABJYNtY7m8RebLPttniVcrERuzPqW3EOUl6c3M3bjwwPUQEk
        sDTde9x+4u/hTZ4lknJe9gneXBkeogJIYGla5Oe9iSWQW4J1eS7w5snwEBVAAos9vY93HDrQm1gCOS1Y
        l+dqb54MD1EBJLDYqbXxjkPv8CaWQD4brMtzjTdPhoeoABJY7q53Ns4mb2IJxE6ZjNcXutCbJ8NDVAAJ
        LN+qdzaOPUPY2Zs8S+S99XomOcmbK8NDVAAJLHb+f7zj2CN4N17r7WQxke3xCdhfI+J1xfby9iHDQ1QA
        CSx244PUC4BewAPwLnxYDA/DW4fnPu8AZZiICiDB/IeqOjvYaV8dHh+cDBdRASSY/zB/u6976p320WXx
        gcmwERVAglf/o6rWw25OED5AH9jrE6vDgxIhKoAEW/6jqk4Jdt4Hdv+CQ8JjEDFEBZBg4UBVHYFH6wfo
        sttR/BoF6SaSWwB2EVo8J/SUNy9E7gi290z84UVmXwBzg1X1OlxVP0jX2CXC9onRrcJlLJJbACsw6Q5Z
        N3nzQuSKYHvPWm/eCClTACPkUHsQNF0vMAsP4QvY01urSIhkFYAhlwbbx47z5oSIff/E80Zu9OaESNkC
        GCF2y7A3wV4oPAzeGx+GTkS40Jg1qzcvZp/AfbETdBtwSUbaKIDVuLnePmTv45/09UhORXyejZ1+v4u3
        fYh0owCmRexdfcKFxhpfQBHJQbILwBC7Kc37Ye+T8TlMfXUssXfT+jTsrcCPRtIZtUQFILI1SCsFUBJR
        AYhsDaICSOAO5iIqACmKqAASuIO5iApAiiIqgATuYC6iApCiiAoggTuYi6gApCiiAkjgDuYiKgApiqgA
        EriDuUhTAdjdfXYVWURfhPe1N/Kv8OZ1iZ356q19pLcFICL5VAAiA6YCEBmwzhaAnfscLlRE2ne59/03
        DXcwF7G3HA8XKiLty37fTnewDaTpdkgikudg73tvGu5gG8gBmHRHFRHZeld633fTcgfbQuzGitfhMYSL
        F5Hp2e3wNuOjWOp9z03n5er/AWEiF5ZCmZoiAAAAAElFTkSuQmCC
</value>
  </data>
</root>